spring:
  # CORS configuration for production (Render)
  web:
    cors:
      allowed-origins: ${ALLOWED_ORIGINS:*}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
  
  # WebMVC configuration
  mvc:
    dispatch-options-request: true
    async:
      request-timeout: 60000
  
  # Database configuration for production
  datasource:
    url: ${DATABASE_URL}
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:2}
      connection-timeout: ${DB_TIMEOUT:30000}
  
  jpa:
    database-platform: ${DB_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    hibernate:
      ddl-auto: ${DDL_AUTO:validate}
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
  
  # Flyway configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

# Server configuration
server:
  port: ${PORT:8080}
  forward-headers-strategy: framework
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: always
    include-binding-errors: always

# Security headers
security:
  headers:
    content-security-policy: "default-src 'self'"
    x-frame-options: DENY
    x-content-type-options: nosniff

# Logging for production
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.springframework.web: ${SPRING_LOG_LEVEL:INFO}
    com.example.sparechange: ${APP_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %level - %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
      cors:
        allowed-origins: ${MANAGEMENT_ORIGINS:*}
        allowed-methods: GET
  endpoint:
    health:
      show-details: ${HEALTH_DETAILS:when-authorized}

# Application specific
app:
  coinbase:
    api-url: ${COINBASE_API_URL:https://api.coinbase.com}
    api-key: ${COINBASE_API_KEY}
    api-secret: ${COINBASE_API_SECRET}
    webhook-secret: ${COINBASE_WEBHOOK_SECRET}